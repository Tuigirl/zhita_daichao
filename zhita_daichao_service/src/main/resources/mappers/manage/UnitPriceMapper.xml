<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.UnitPriceMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.UnitPrice">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="accountType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="firmType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="firm" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deleted" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="modifyTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="company" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sourceId" javaType="java.lang.Integer" jdbcType="VARCHAR" />
      <arg column="businessesId" javaType="java.lang.Integer" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, account, price, accountType, firmType, firm,deleted,modifyTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from unit_price
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from unit_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.UnitPrice">
    insert into unit_price (id, account, price, 
      accountType, firmType, firm
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{accounttype,jdbcType=VARCHAR}, #{firmtype,jdbcType=VARCHAR}, #{firm,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.UnitPrice">
    insert into unit_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="accounttype != null">
        accountType,
      </if>
      <if test="firmtype != null">
        firmType,
      </if>
      <if test="firm != null">
        firm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="accounttype != null">
        #{accounttype,jdbcType=VARCHAR},
      </if>
      <if test="firmtype != null">
        #{firmtype,jdbcType=VARCHAR},
      </if>
      <if test="firm != null">
        #{firm,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.UnitPrice">
    update unit_price
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="accounttype != null">
        accountType = #{accounttype,jdbcType=VARCHAR},
      </if>
      <if test="firmtype != null">
        firmType = #{firmtype,jdbcType=VARCHAR},
      </if>
      <if test="firm != null">
        firm = #{firm,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.UnitPrice">
    update unit_price
    set account = #{account,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      accountType = #{accounttype,jdbcType=VARCHAR},
      firmType = #{firmtype,jdbcType=VARCHAR},
      firm = #{firm,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
 <!--  ===================================================================== -->
 		  	<!--单价设置中的插入数据 -->
	<insert id="setunitprice" parameterType="java.util.Map">
    insert into unit_price (account, price, 
      accountType, firmType, firm,modifyTime,company
      )
    values ( #{account,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{accountType,jdbcType=VARCHAR}, #{firmType,jdbcType=VARCHAR}, #{firm,jdbcType=VARCHAR},#{registrationTime,jdbcType=VARCHAR},#{company,jdbcType=VARCHAR}
      )
	</insert>
 
 			<!--单价设置中的更新数据 -->
	<update id="updateUnitPrice" parameterType="java.util.Map" >
		update unit_price
		set account = #{account},
		price = #{price},
		accountType = #{accountType},
		firmType = #{firmType},
		firm = #{firm},
		modifyTime = #{registrationTime}
		where id = #{id} and deleted = '0'
	</update>
	
	 			<!--单价设置中的删除数据，其实就是把deleted改成1 -->
	<update id="deleteUnitPrice" parameterType="java.util.Map" >
		update unit_price set deleted = '1',modifyTime = #{registrationTime} where id = #{id}
	</update>
	
		 			<!--单价设置中的删除某个账号的全部数据，其实就是把deleted改成1 -->
	<update id="deleteFirm" parameterType="java.util.Map" >
		update unit_price set deleted = '1',modifyTime = #{registrationTime} where account = #{account} and firm =#{firm} and company =#{company}
	</update>
	
			<!--单价设置中,查出所有的账号   -->
	<select id="getaccount" parameterType="java.lang.String" resultType="java.lang.String">
		select distinct account from unit_price where firm = #{firm} and firmType=#{firmType} and deleted = '0'
	</select>
	
				<!--单价设置中,查出所有的账号对应得价格   -->
	<select id="getprice" parameterType="java.lang.String" resultType="java.lang.Integer">
		select price from unit_price where account = #{account} and deleted = '0'
	</select>
	
					<!--单价设置中,查出所有的数据  -->
	<select id="getunitprice" parameterType="java.lang.String" resultType="com.zhita.model.manage.UnitPrice">
		select id,account,price,accountType,firmType,firm,modifyTime from unit_price where firm = #{firm} and firmType=#{firmType} and deleted = '0' and company =#{company}
	</select>
</mapper>