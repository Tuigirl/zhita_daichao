<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.ManageLoginMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.ManageLogin">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="loginStatus" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="loginTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deleted" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, phone, loginStatus, loginTime, deleted
  </sql>
  <!-- 后台管理   通过id查询出管理登陆用户信息 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="manageloginMap">
	select u.id,u.userName,u.phone,u.loginStatus,u.loginTime,u.deleted,
	GROUP_CONCAT(r.id) roleid, 
	GROUP_CONCAT(r.roleName) rolename,
	GROUP_CONCAT(r.roleMiaoshu) roleMiaoshu
	from manage_login u 
	left join managelogin_role mr on mr.manage_login_id=u.id
	left join role r on mr.role_id=r.id
	group by u.id having u.id=#{id}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from manage_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.ManageLogin">
    insert into manage_login (id, userName, phone, 
      loginStatus, loginTime, deleted)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{loginstatus,jdbcType=VARCHAR}, #{logintime,jdbcType=VARCHAR}, #{deleted,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.ManageLogin">
    insert into manage_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="loginstatus != null">
        loginStatus,
      </if>
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="loginstatus != null">
        #{loginstatus,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.ManageLogin">
    update manage_login
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="loginstatus != null">
        loginStatus = #{loginstatus,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.ManageLogin">
    update manage_login
    set userName = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      loginStatus = #{loginstatus,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER} and deleted= '0'
  </update>
    	<!--判断用户名是否存在 -->
	<select id="findFormatByLoginName" resultMap="BaseResultMap"
		parameterType="String">
    	<![CDATA[
       SELECT a.* FROM manage_login a WHERE 1=1 
       AND a.userName=#{userName} and deleted = '0'
       ]]>
	</select>
		<!--登录时，登录状态修改 -->
	<update id="updateAdminLoginStatus" parameterType="java.lang.String" >
		update manage_login
		set loginStatus = #{loginStatus},loginTime = #{registrationTime}
		where userName = #{userName}
		and phone = #{phone} and deleted = '0'
	</update>
		<!-- 后台管理 通过手机号、用户名，获取用户的id  -->
	<select id="getAdminId" parameterType="java.lang.String" resultType="java.lang.Integer">
		select id from manage_login where phone = #{phone} and userName = #{userName} and deleted ='0'
	</select>
			<!-- 退出时，修改登录状态修改 -->
	<update id="updateAdminLogOutStatus" parameterType="map" >
		update user
		set loginStatus = #{loginStatus}
		where id = #{userId} and deleted = '0'
	</update>
	
	<!-- 后台管理      查询出管理登陆用户表一共有多少条数据 -->
	<select id="pageCountManageLogin" resultType="java.lang.Integer">
		select count(username) from manage_login;
	</select>
	
	<resultMap type="com.zhita.model.manage.ManageLogin" id="manageloginMap">
		<id property="id" column="id" />
        <result property="username" column="userName" />
        <result property="phone" column="phone" />
        <result property="loginstatus" column="loginStatus" />
        <result property="logintime" column="loginTime" />
        <result property="deleted" column="deleted" />
	    <collection  property="listRole"  ofType="com.zhita.model.manage.Role">
            <id property="id" column="id" />
            <result property="rolename" column="roleName" />    
            <result property="rolemiaoshu" column="roleMiaoshu" />   
        </collection>
	</resultMap>
	<!-- 后台管理     查询出所有用户信息   含用户信息  用户的角色含分页 -->
	<select id="queryManageLogin" parameterType="java.lang.Integer" resultMap="manageloginMap">
		select u.id,u.userName,u.phone,u.loginStatus,u.loginTime,u.deleted,
		GROUP_CONCAT(r.id) roleid, 
		GROUP_CONCAT(r.roleName) rolename,
		GROUP_CONCAT(r.roleMiaoshu) roleMiaoshu
		from manage_login u 
		left join managelogin_role mr on mr.manage_login_id=u.id
		left join role r on mr.role_id=r.id
		group by u.id limit #{arg0},#{arg1}
	</select>
	
	
	<!-- 后台管理     根据用户名  模糊查询出管理登陆用户表一共有多少条数据 -->
	<select id="pageCountManageLoginLike" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(username) from manage_login where userName like #{arg0}"%";
	</select>
	
	<!-- 后台管理     根据用户名  模糊查询出所有用户信息   含用户信息  用户的角色含分页 -->
	<select id="queryManageLoginLike" resultMap="manageloginMap">
		select u.id,u.userName,u.phone,u.loginStatus,u.loginTime,u.deleted,
		GROUP_CONCAT(r.id) roleid, 
		GROUP_CONCAT(r.roleName) rolename,
		GROUP_CONCAT(r.roleMiaoshu) roleMiaoshu
		from manage_login u 
		left join managelogin_role mr on mr.manage_login_id=u.id
		left join role r on mr.role_id=r.id
		group by u.id having u.userName like #{arg0}"%" limit #{arg1},#{arg2}
	</select>
	
	<!-- 后台管理   根据账号状态  模糊查询出管理登陆用户表一共有多少条数据 -->
	<select id="pageCountManageLoginLike1" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(username) from manage_login where deleted=#{arg0}
	</select>
	
	<!-- 后台管理  根据账号状态  模糊查询出所有用户信息   含用户信息  用户的角色含分页 -->
	<select id="queryManageLoginLike1" resultMap="manageloginMap">
		select u.id,u.userName,u.phone,u.loginStatus,u.loginTime,u.deleted,
		GROUP_CONCAT(r.id) roleid, 
		GROUP_CONCAT(r.roleName) rolename,
		GROUP_CONCAT(r.roleMiaoshu) roleMiaoshu
		from manage_login u 
		left join managelogin_role mr on mr.manage_login_id=u.id
		left join role r on mr.role_id=r.id
		group by u.id having u.deleted= #{arg0} limit #{arg1},#{arg2}
	</select>
		<!-- 后台管理   根据用户名和账号状态  模糊查询出管理登陆用户表一共有多少条数据 -->
	<select id="pageCountManageLoginLike2" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(username) from manage_login where userName like #{arg0}"%" and deleted=#{arg1}
	</select>
	
	<!-- 后台管理  根据用户名和账号状态  模糊查询出所有用户信息   含用户信息  用户的角色含分页 -->
	<select id="queryManageLoginLike2" resultMap="manageloginMap">
		select u.id,u.userName,u.phone,u.loginStatus,u.loginTime,u.deleted,
		GROUP_CONCAT(r.id) roleid, 
		GROUP_CONCAT(r.roleName) rolename,
		GROUP_CONCAT(r.roleMiaoshu) roleMiaoshu
		from manage_login u 
		left join managelogin_role mr on mr.manage_login_id=u.id
		left join role r on mr.role_id=r.id
		group by u.id having userName like #{arg0}"%" and deleted=#{arg1} limit #{arg2},#{arg3}
	</select>
	
	<!-- 后台管理   添加后台管理用户 -->
	<insert id="addManageLogin" parameterType="com.zhita.model.manage.ManageLogin">
		insert into manage_login(username,phone) values(#{username,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR})
	</insert>
	<!--后台管理    将修改后的管理登陆用户   信息进行保存  -->
	<update id="upaManageLogin" parameterType="com.zhita.model.manage.ManageLogin">
		    update manage_login
		    set userName = #{username,jdbcType=VARCHAR},
		      phone = #{phone,jdbcType=VARCHAR},
		      loginStatus = #{loginstatus,jdbcType=VARCHAR},
		      loginTime = #{logintime,jdbcType=VARCHAR},
		      deleted = #{deleted,jdbcType=VARCHAR}
		    where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 后台管理       修改管理登陆用户的假删除状态-->
	<delete id="upaManageloginFalseDel" parameterType="java.lang.Integer">
		update manage_login set deleted='1' where id=#{id}
	</delete>
</mapper>