<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhita.dao.manage.ManageloginRoleMapper" >
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.ManageloginRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="manageLoginId" property="manageLoginId" jdbcType="INTEGER" />
    <result column="roleId" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, manageLoginId, roleId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from managelogin_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from managelogin_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.ManageloginRole" >
    insert into managelogin_role (id,manageLoginId, roleId
      )
    values (#{id,jdbcType=INTEGER}, #{manageLoginId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.ManageloginRole" >
    insert into managelogin_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="manageLoginId != null" >
        manageLoginId,
      </if>
      <if test="roleId != null" >
        roleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="manageLoginId != null" >
        #{manageLoginId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.ManageloginRole" >
    update managelogin_role
    set manageLoginId = #{manageLoginId,jdbcType=INTEGER},
      roleId = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 后台管理  通过用户id查询出   在用户角色关联表中的id集合 -->
  <select id="queryByManageloginId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select id from managelogin_role where manageLoginId=#{id}
  </select>
  <!-- 后台管理   在用户角色关联表中    根据主键id进行删除 -->
  <delete id="delManageloginRole" parameterType="java.lang.Integer">
  	delete from managelogin_role where id=#{id}
  </delete>
  <!--后台管理   通过传过来的用户id和角色id   在中间表进行插入数据  -->
  <insert id="add" parameterType="java.lang.Integer">
	insert into managelogin_role(manageLoginId,roleId) values(#{arg0},#{arg1})  
  </insert>
</mapper>