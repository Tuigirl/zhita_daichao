<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.UnitPriceMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.UnitPrice">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="accountType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="firmType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="firm" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deleted" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="modifyTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="company" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sourceId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="businessesId" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, account, price, accountType, firmType, firm, deleted, modifyTime, company, sourceId, 
    businessesId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from unit_price
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from unit_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.UnitPrice">
    insert into unit_price (id, account, price, 
      accountType, firmType, firm, 
      deleted, modifyTime, company, 
      sourceId, businessesId)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{accounttype,jdbcType=VARCHAR}, #{firmtype,jdbcType=VARCHAR}, #{firm,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=VARCHAR}, #{modifytime,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{sourceid,jdbcType=INTEGER}, #{businessesid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.UnitPrice">
    insert into unit_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="accounttype != null">
        accountType,
      </if>
      <if test="firmtype != null">
        firmType,
      </if>
      <if test="firm != null">
        firm,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="modifytime != null">
        modifyTime,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="sourceid != null">
        sourceId,
      </if>
      <if test="businessesid != null">
        businessesId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="accounttype != null">
        #{accounttype,jdbcType=VARCHAR},
      </if>
      <if test="firmtype != null">
        #{firmtype,jdbcType=VARCHAR},
      </if>
      <if test="firm != null">
        #{firm,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="sourceid != null">
        #{sourceid,jdbcType=INTEGER},
      </if>
      <if test="businessesid != null">
        #{businessesid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.UnitPrice">
    update unit_price
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="accounttype != null">
        accountType = #{accounttype,jdbcType=VARCHAR},
      </if>
      <if test="firmtype != null">
        firmType = #{firmtype,jdbcType=VARCHAR},
      </if>
      <if test="firm != null">
        firm = #{firm,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null">
        modifyTime = #{modifytime,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="sourceid != null">
        sourceId = #{sourceid,jdbcType=INTEGER},
      </if>
      <if test="businessesid != null">
        businessesId = #{businessesid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.UnitPrice">
    update unit_price
    set account = #{account,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      accountType = #{accounttype,jdbcType=VARCHAR},
      firmType = #{firmtype,jdbcType=VARCHAR},
      firm = #{firm,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=VARCHAR},
      modifyTime = #{modifytime,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      sourceId = #{sourceid,jdbcType=INTEGER},
      businessesId = #{businessesid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
 <!--  ===================================================================== -->
 		  	<!--单价设置中的插入数据 -->
	<insert id="setunitprice" parameterType="java.util.Map" useGeneratedKeys="true">
    insert into unit_price (sourceId,businessesId,account, price, 
      accountType, firmType,modifyTime,company
      )
    values (#{sourceId,jdbcType=INTEGER},#{businessesId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{accountType,jdbcType=VARCHAR}, #{firmType,jdbcType=VARCHAR},#{registrationTime,jdbcType=VARCHAR},#{company,jdbcType=VARCHAR}
      )
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">  
      SELECT LAST_INSERT_ID()
    </selectKey> 
	</insert>
	
	 		  	<!--单价设置中的插入数据 -->
	<insert id="setunitprice1" parameterType="java.util.Map" useGeneratedKeys="true">
    insert into unit_price (sourceId,businessesId,account, price, 
      accountType, firmType,modifyTime,company
      )
    values (#{sourceId,jdbcType=INTEGER},#{businessesId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{accountType,jdbcType=VARCHAR}, #{firmType,jdbcType=VARCHAR},#{modifyTime,jdbcType=VARCHAR},#{company,jdbcType=VARCHAR}
      )
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">  
      SELECT LAST_INSERT_ID()
    </selectKey> 
	</insert>
 
 			<!--单价设置中的更新数据 -->
	<update id="updateUnitPrice" parameterType="java.util.Map">
		update unit_price
		set account = #{account},
		price = #{price},
		accountType = #{accountType},
		firmType = #{firmType},
		sourceId = #{sourceId},
		businessesId = #{businessesId},
		modifyTime = #{registrationTime}
		where id = #{id} and deleted = '0' and company = #{company}
	</update>
	
	 			<!--单价设置中的删除数据，其实就是把deleted改成1 -->
	<update id="deleteUnitPrice" parameterType="java.util.Map">
		update unit_price set deleted = '1',modifyTime = #{registrationTime} where id = #{id}
	</update>
	
		 			<!--单价设置中的删除某个账号的全部数据，其实就是把deleted改成1 -->
	<update id="deleteFirm" parameterType="java.util.Map">
		update unit_price set deleted = '1',modifyTime = #{registrationTime} where account = #{account} and sourceId =#{sourceId} and company =#{company}
	</update>
	
			<!--单价设置中,查出所有的账号   -->
	<select id="getaccount" parameterType="java.lang.String" resultType="java.lang.String">
		select distinct account from unit_price where firm = #{firm} and firmType=#{firmType} and deleted = '0'
	</select>
	
				<!--单价设置中,查出所有的账号对应得价格   -->
	<select id="getprice" parameterType="java.lang.String" resultType="java.lang.Integer">
		select price from unit_price where account = #{account} and deleted = '0'
	</select>
	
					<!--单价设置中,查出所有的数据  -->
	<select id="getunitprice" parameterType="java.util.Map" resultType="com.zhita.model.manage.UnitPrice">
		select id,account,price,accountType,firmType,firm,modifyTime,businessesId from unit_price where sourceId=#{sourceId} and deleted = '0' and company =#{company} order by account limit #{pages},#{pageSize}
	</select>
						<!--根据账号，查寻出甲方id  -->
	<select id="getbusinessesId" parameterType="java.lang.String" resultType="java.lang.Integer">
		select businessesId from unit_price where account=#{account} and deleted = '0' and company =#{company} limit 1;
	</select>
	
							<!--查出指定渠道的所有账号  -->
	<select id="getaccountBySourceId" parameterType="java.util.Map" resultType="com.zhita.model.manage.UnitPrice">
		select account from unit_price  where sourceId=#{sourceId} and deleted = '0' and company =#{company} and firmType = #{firmType} limit #{pages},#{pageSize}
	</select>
	
								<!--查出指定渠道的所有账号  -->
	<select id="getaccountById" parameterType="java.util.Map" resultType="java.lang.String">
		select distinct account from unit_price  where sourceId=#{sourceId} and deleted = '0' and company =#{company}
	</select>
	
		   <!-- 查询单价设置中有多少条数据 -->
 <select id="pageCountUnitprice" parameterType="java.util.Map" resultType="java.lang.Integer">
   select count(id) from unit_price where deleted='0' and company = #{company} and sourceId = #{sourceId} 
 </select>
	
			   <!--根据账号 查询单价设置中该账号的类型 -->
 <select id="getaccountType" parameterType="java.lang.String" resultType="java.lang.String">
   select accountType from unit_price where deleted='0' and company = #{company} and account = #{account} limit 1
 </select>
 
 			   <!--编辑账单中查询某个账号的所有单价 -->
 <select id="getPrice" parameterType="java.lang.String" resultType="java.lang.Integer">
   select price from unit_price where deleted='0' and company = #{company} and account = #{account}
 </select>
 
  			   <!--编辑账单中查询某个账号的流量去向 -->
 <select id="getSourceTo" parameterType="java.lang.String" resultType="java.lang.Integer">
   select businessesId from unit_price where deleted='0' and company = #{company} and account = #{account} limit 1
 </select>
</mapper>