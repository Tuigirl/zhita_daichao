<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.ApplyMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.Apply">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="dailyApplications" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="dailyUsers" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="monthlyApplications" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="MonthlyUsers" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, dailyApplications, dailyUsers, monthlyApplications, MonthlyUsers
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.Apply">
    insert into apply (id, userId, dailyApplications, 
      dailyUsers, monthlyApplications, MonthlyUsers
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{dailyapplications,jdbcType=INTEGER}, 
      #{dailyusers,jdbcType=INTEGER}, #{monthlyapplications,jdbcType=INTEGER}, #{monthlyusers,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.Apply">
    insert into apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="dailyapplications != null">
        dailyApplications,
      </if>
      <if test="dailyusers != null">
        dailyUsers,
      </if>
      <if test="monthlyapplications != null">
        monthlyApplications,
      </if>
      <if test="monthlyusers != null">
        MonthlyUsers,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="dailyapplications != null">
        #{dailyapplications,jdbcType=INTEGER},
      </if>
      <if test="dailyusers != null">
        #{dailyusers,jdbcType=INTEGER},
      </if>
      <if test="monthlyapplications != null">
        #{monthlyapplications,jdbcType=INTEGER},
      </if>
      <if test="monthlyusers != null">
        #{monthlyusers,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.Apply">
    update apply
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="dailyapplications != null">
        dailyApplications = #{dailyapplications,jdbcType=INTEGER},
      </if>
      <if test="dailyusers != null">
        dailyUsers = #{dailyusers,jdbcType=INTEGER},
      </if>
      <if test="monthlyapplications != null">
        monthlyApplications = #{monthlyapplications,jdbcType=INTEGER},
      </if>
      <if test="monthlyusers != null">
        MonthlyUsers = #{monthlyusers,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.Apply">
    update apply
    set userId = #{userid,jdbcType=INTEGER},
      dailyApplications = #{dailyapplications,jdbcType=INTEGER},
      dailyUsers = #{dailyusers,jdbcType=INTEGER},
      monthlyApplications = #{monthlyapplications,jdbcType=INTEGER},
      MonthlyUsers = #{monthlyusers,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>