<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.BlacklistMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.Blacklist">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="idCard" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creationTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="company" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, name, idCard, phone, creationTime, company
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blacklist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blacklist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.Blacklist">
    insert into blacklist (id, userId, name, 
      idCard, phone, creationTime,company
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{creationtime,jdbcType=VARCHAR},#{company,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.Blacklist">
    insert into blacklist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="creationtime != null">
        creationTime,
      </if>
      <if test="company != null">
        company,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null">
        #{creationtime,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.Blacklist">
    update blacklist
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null">
        creationTime = #{creationtime,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.Blacklist">
    update blacklist
    set userId = #{userid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      idCard = #{idcard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      creationTime = #{creationtime,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  	  	<!-- 黑名单用户信息 -->
	<insert id="setblacklist" parameterType="java.util.Map">
		insert into blacklist (userId, name,phone,
		idCard,creationTime,company)
		values (#{userId},
		#{name},
		#{phone},
		#{idCard},
		#{creationTime},
		#{company})
	</insert>
</mapper>